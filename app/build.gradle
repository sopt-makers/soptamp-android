plugins {
    alias libs.plugins.android.application
    alias libs.plugins.kotlin.android
    alias libs.plugins.kotlin.kapt
    alias libs.plugins.dagger.hilt
    alias libs.plugins.google.services
    alias libs.plugins.crashlytics
    alias libs.plugins.ktlint
    alias libs.plugins.ksp
    alias libs.plugins.kotlinx.serialization
    alias libs.plugins.spotless
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'org.sopt.stamp'
    compileSdk 33

    defaultConfig {
        applicationId "org.sopt.stamp"
        minSdk 28
        targetSdk 33
        versionCode 900
        versionName "0.9.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField "String", "SOPTAMP_API_KEY", properties["apiKey"]
        buildConfigField "String", "SOPTAMP_DATA_STORE_KEY", properties["dataStoreKey"]
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        sourceSets {
            getByName(variant.name) {
                java.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation libs.kotlin.datetime
    implementation libs.kotlin.serialization.json
    implementation libs.core.ktx
    implementation libs.splash
    implementation libs.bundles.compose
    implementation libs.compose.destination.core
    ksp libs.compose.destination.ksp
    implementation libs.appcompat
    implementation libs.lifecycle.viewmodel
    implementation libs.startup
    implementation libs.security
    implementation libs.material
    implementation libs.bundles.accompanist
    implementation libs.inappupdate
    implementation platform(libs.okhttp.bom)
    implementation libs.bundles.okhttp
    implementation libs.retrofit
    implementation libs.retrofit.kotlin.serialization.converter
    implementation libs.timber
    implementation libs.coil.compose
    implementation libs.process.phoenix

    implementation libs.bundles.compose

    implementation libs.bundles.mavericks

    implementation libs.hilt
    kapt libs.hilt.kapt

    implementation platform(libs.firebase)
    implementation libs.bundles.firebase
    implementation libs.compose.destination.core
    ksp libs.compose.destination.ksp
    testImplementation libs.junit
    androidTestImplementation libs.bundles.compose.test
    androidTestImplementation libs.bundles.android.test
    debugImplementation libs.bundles.compose.android.test
    debugImplementation libs.bundles.flipper
    debugImplementation(libs.flipper.network.get()) {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
}

ktlint {
    android = true
    debug = true
    coloredOutput = true
    verbose = true
    outputToConsole = true
    filter {
        exclude { projectDir.toURI().relativize(it.file.toURI()).path.contains("/generated/") }
    }
}